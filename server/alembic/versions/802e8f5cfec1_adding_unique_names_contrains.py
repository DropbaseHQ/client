"""adding unique names contrains

Revision ID: 802e8f5cfec1
Revises: 3462f1e7ab30
Create Date: 2023-11-07 15:11:01.707965

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '802e8f5cfec1'
down_revision = '3462f1e7ab30'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('functions')
    op.drop_table('source')
    op.create_unique_constraint('unique_page_name_per_app', 'page', ['name', 'app_id'])
    op.create_unique_constraint('unique_table_name_per_page', 'tables', ['name', 'page_id'])
    op.create_unique_constraint('unique_widget_name_per_page', 'widget', ['name', 'page_id'])
    op.create_unique_constraint('unique_file_name_per_page', 'files', ['name', 'page_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('unique_widget_name_per_page', 'widget', type_='unique')
    op.drop_constraint('unique_table_name_per_page', 'tables', type_='unique')
    op.drop_constraint('unique_page_name_per_app', 'page', type_='unique')
    op.drop_constraint('unique_file_name_per_page', 'files', type_='unique')
    op.create_table('source',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('creds', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('workspace_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspace.id'], name='source_workspace_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='source_pkey')
    )
    op.create_table('functions',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('test_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('page_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], name='functions_page_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='functions_pkey')
    )
    # ### end Alembic commands ###
