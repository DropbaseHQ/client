"""added last name and company

Revision ID: dfe66f63ddd8
Revises: 87db053768d2
Create Date: 2024-02-12 15:29:08.540869

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'dfe66f63ddd8'
down_revision = '87db053768d2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('components')
    op.drop_table('columns')
    op.drop_table('tables')
    op.drop_table('widget')
    op.drop_table('files')
    op.add_column('user', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('user', sa.Column('company', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'company')
    op.drop_column('user', 'last_name')
    op.create_table('files',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('page_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], name='files_page_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='files_pkey'),
    sa.UniqueConstraint('name', 'page_id', name='unique_file_name_per_page'),
    postgresql_ignore_search_path=False
    )
    op.create_table('columns',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('property', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('table_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], name='columns_table_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='columns_pkey')
    )
    op.create_table('widget',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('property', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('page_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], name='widget_page_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='widget_pkey'),
    sa.UniqueConstraint('name', 'page_id', name='unique_widget_name_per_page'),
    postgresql_ignore_search_path=False
    )
    op.create_table('components',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('property', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('widget_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('after', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['after'], ['components.id'], name='components_after_fkey'),
    sa.ForeignKeyConstraint(['widget_id'], ['widget.id'], name='components_widget_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='components_pkey')
    )
    op.create_table('tables',
    sa.Column('id', postgresql.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('property', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('file_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('page_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.Column('depends_on', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['files.id'], name='tables_file_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], name='tables_page_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='tables_pkey'),
    sa.UniqueConstraint('name', 'page_id', name='unique_table_name_per_page')
    )
    # ### end Alembic commands ###
